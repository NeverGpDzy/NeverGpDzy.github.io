"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6065],{3288:(t,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=a(4848),e=a(8453);const i={},s="\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868",o={id:"DataStructer/\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868",title:"\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868",description:"\u4ee3\u7801",source:"@site/docs/DataStructer/\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868.md",sourceDirName:"DataStructer",slug:"/DataStructer/\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"DataStructerSidebar",previous:{title:"\u5e0c\u5c14\u6392\u5e8f",permalink:"/docs/DataStructer/\u6392\u5e8f\u7b97\u6cd5/shellSort"},next:{title:"\u6570\u636e\u7ed3\u678402-\u5355\u94fe\u8868",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678402-\u5355\u94fe\u8868"}},l={},u=[{value:"\u8fd0\u884c\u7ed3\u679c",id:"\u8fd0\u884c\u7ed3\u679c",level:2}];function p(t){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,e.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868",children:"\u6570\u636e\u7ed3\u678401-\u7ebf\u6027\u8868"}),"\n",(0,r.jsx)(n.p,{children:"\u4ee3\u7801"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n\n#define LIST_MAX_LENGTH 10 // \u5b9a\u4e49\u5217\u8868\u7684\u6700\u5927\u957f\u5ea6\n\n// \u5b9a\u4e49\u987a\u5e8f\u8868\u7684\u7ed3\u6784\u4f53\ntypedef struct SequentialList\n{\n    int actualLength; // \u5b9e\u9645\u957f\u5ea6\n    int data[LIST_MAX_LENGTH]; // \u6570\u636e\u6570\u7ec4\uff0c\u957f\u5ea6\u56fa\u5b9a\n} *SequentialListPtr;\n\n// \u8f93\u51fa\u987a\u5e8f\u8868\u7684\u6240\u6709\u5143\u7d20\nvoid outputList(SequentialListPtr paraList)\n{\n    for (int i = 0; i < paraList->actualLength; i++)\n    {\n        printf("%d ", paraList->data[i]);\n    }\n    printf("\\r\\n");\n}\n\n// \u8f93\u51fa\u987a\u5e8f\u8868\u7684\u5185\u5b58\u5730\u5740\u4fe1\u606f\nvoid outputMemory(SequentialListPtr paraListPtr)\n{\n    printf("The address of the structure: %ld\\r\\n", (long)paraListPtr);\n    printf("The address of actualLength: %ld\\r\\n", (long)&paraListPtr->actualLength);\n    printf("The address of data: %ld\\r\\n", (long)&paraListPtr->data);\n    printf("The address of actual data: %ld\\r\\n", (long)&paraListPtr->data[0]);\n    printf("The address of second data: %ld\\r\\n", (long)&paraListPtr->data[1]);\n}\n\n// \u521d\u59cb\u5316\u987a\u5e8f\u8868\uff0c\u5e76\u586b\u5145\u521d\u59cb\u6570\u636e\nSequentialListPtr sequentialListInit(int paraData[], int paraLength)\n{\n    SequentialListPtr resultPtr = (SequentialListPtr)malloc(sizeof(struct SequentialList));\n    for (int i = 0; i < paraLength; i++)\n    {\n        resultPtr->data[i] = paraData[i];\n    }\n    resultPtr->actualLength = paraLength;\n    return resultPtr;\n}\n\n// \u5728\u987a\u5e8f\u8868\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\nvoid sequentialListInsert(SequentialListPtr paraListPtr, int paraPosition, int paraValue)\n{\n    // \u68c0\u67e5\u7a7a\u95f4\u662f\u5426\u8db3\u591f\n    if (paraListPtr->actualLength >= LIST_MAX_LENGTH)\n    {\n        printf("Cannot insert element: list full.\\r\\n");\n        return;\n    }\n    // \u68c0\u67e5\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\n    if (paraPosition < 0 || paraPosition > paraListPtr->actualLength)\n    {\n        printf("Cannot insert element: position out of bounds.\\r\\n");\n        return;\n    }\n    // \u79fb\u52a8\u540e\u7eed\u5143\u7d20\u4ee5\u7a7a\u51fa\u4f4d\u7f6e\n    for (int i = paraListPtr->actualLength; i > paraPosition; i--)\n    {\n        paraListPtr->data[i] = paraListPtr->data[i - 1];\n    }\n    // \u63d2\u5165\u65b0\u5143\u7d20\n    paraListPtr->data[paraPosition] = paraValue;\n    // \u66f4\u65b0\u5b9e\u9645\u957f\u5ea6\n    paraListPtr->actualLength++;\n}\n\n// \u6d4b\u8bd5\u63d2\u5165\u64cd\u4f5c\nvoid sequentialInsertTest()\n{\n    // \u7701\u7565\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4e0e\u539f\u4ee3\u7801\u76f8\u540c\n}\n\n// \u5728\u987a\u5e8f\u8868\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u5220\u9664\u7684\u5143\u7d20\nint sequentialListDelete(SequentialListPtr paraListPtr, int paraPosition)\n{\n    // \u68c0\u67e5\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\n    if (paraPosition < 0 || paraPosition >= paraListPtr->actualLength)\n    {\n        printf("Invalid position for deletion.\\r\\n");\n        return -1;\n    }\n    // \u4fdd\u5b58\u88ab\u5220\u9664\u7684\u5143\u7d20\n    int resultValue = paraListPtr->data[paraPosition];\n    // \u79fb\u52a8\u540e\u7eed\u5143\u7d20\u4ee5\u586b\u8865\u7a7a\u4f4d\n    for (int i = paraPosition; i < paraListPtr->actualLength - 1; i++)\n    {\n        paraListPtr->data[i] = paraListPtr->data[i + 1];\n    }\n    // \u66f4\u65b0\u5b9e\u9645\u957f\u5ea6\n    paraListPtr->actualLength--;\n    // \u8fd4\u56de\u88ab\u5220\u9664\u7684\u5143\u7d20\n    return resultValue;\n}\n\n// \u6d4b\u8bd5\u5220\u9664\u64cd\u4f5c\nvoid sequentialDeleteTest()\n{\n    // \u7701\u7565\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4e0e\u539f\u4ee3\u7801\u76f8\u540c\n}\n\n// \u5728\u987a\u5e8f\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e\nint locateElement(SequentialListPtr paraListPtr, int paraValue)\n{\n    for (int i = 0; i < paraListPtr->actualLength; i++)\n    {\n        if (paraListPtr->data[i] == paraValue)\n        {\n            return i; // \u627e\u5230\u5143\u7d20\uff0c\u8fd4\u56de\u4f4d\u7f6e\n        }\n    }\n    return -1; // \u672a\u627e\u5230\uff0c\u8fd4\u56de-1\n}\n\n// \u83b7\u53d6\u987a\u5e8f\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\nint getElement(SequentialListPtr paraListPtr, int paraPosition)\n{\n    // \u68c0\u67e5\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\n    if (paraPosition < 0 || paraPosition >= paraListPtr->actualLength)\n    {\n        printf("Invalid position for getting element.\\r\\n");\n        return -1;\n    }\n    // \u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n    return paraListPtr->data[paraPosition];\n}\n\n// \u6e05\u7a7a\u987a\u5e8f\u8868\u7684\u6240\u6709\u5143\u7d20\nvoid clearList(SequentialListPtr paraListPtr)\n{\n    paraListPtr->actualLength = 0;\n}\n\n// \u4e3b\u51fd\u6570\uff0c\u7a0b\u5e8f\u5165\u53e3\nint main()\n{\n    sequentialInsertTest();\n    sequentialDeleteTest();\n    return 0; // \u4e3b\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u5e94\u4e3aint\n}\n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"http://picture.nevergpdzy.cn/img_for_Typora/0c4ba41e87e54714aa420662cf86e808.png",alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"\u8fd0\u884c\u7ed3\u679c",children:"\u8fd0\u884c\u7ed3\u679c"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"http://picture.nevergpdzy.cn/img_for_Typora/0c4ba41e87e54714aa420662cf86e808-20240526214942055.png",alt:""})})]})}function c(t={}){const{wrapper:n}={...(0,e.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}},8453:(t,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var r=a(6540);const e={},i=r.createContext(e);function s(t){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(e):t.components||e:s(t.components),r.createElement(i.Provider,{value:n},t.children)}}}]);