"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7649],{1103:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var r=e(4848),c=e(8453);const a={},i=void 0,s={id:"DataStructer/\u6570\u636e\u7ed3\u678406-\u6808",title:"\u6570\u636e\u7ed3\u678406-\u6808",description:"\u6570\u636e\u7ed3\u678406-\u6808",source:"@site/docs/DataStructer/\u6570\u636e\u7ed3\u678406-\u6808.md",sourceDirName:"DataStructer",slug:"/DataStructer/\u6570\u636e\u7ed3\u678406-\u6808",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678406-\u6808",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"DataStructerSidebar",previous:{title:"\u6570\u636e\u7ed3\u678405-\u591a\u9879\u5f0f\u76f8\u52a0",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678405-\u591a\u9879\u5f0f\u76f8\u52a0"},next:{title:"\u6570\u636e\u7ed3\u678407-\u62ec\u53f7\u5339\u914d",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678407-\u62ec\u53f7\u5339\u914d"}},p={},o=[{value:"\u6570\u636e\u7ed3\u678406-\u6808",id:"\u6570\u636e\u7ed3\u678406-\u6808",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u8fd0\u884c\u7ed3\u679c",id:"\u8fd0\u884c\u7ed3\u679c",level:3}];function d(n){const t={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"\u6570\u636e\u7ed3\u678406-\u6808",children:"\u6570\u636e\u7ed3\u678406-\u6808"}),"\n",(0,r.jsx)(t.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n\n#define STACK_MAX_SIZE 10 // \u5b9a\u4e49\u6808\u7684\u6700\u5927\u5bb9\u91cf\n\n// \u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u6808\u7684\u7ed3\u6784\u4f53\ntypedef struct CharStack {\n    int top; // \u6808\u9876\u6307\u9488\uff0c\u521d\u59cb\u5316\u4e3a-1\uff0c\u8868\u793a\u6808\u4e3a\u7a7a\n    int data[STACK_MAX_SIZE]; // \u6808\u7684\u5b58\u50a8\u6570\u7ec4\uff0c\u6700\u5927\u957f\u5ea6\u56fa\u5b9a\n} *CharStackPtr;\n\n// \u8f93\u51fa\u6808\u4e2d\u7684\u5143\u7d20\nvoid outputStack(CharStackPtr paraStack) {\n    for (int i = 0; i <= paraStack->top; i ++) {\n        printf("%c ", paraStack->data[i]);\n    }\n    printf("\\r\\n");\n}\n\n// \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684\u5b57\u7b26\u6808\nCharStackPtr charStackInit() {\n    CharStackPtr resultPtr = (CharStackPtr)malloc(sizeof(struct CharStack));\n    resultPtr->top = -1; // \u521d\u59cb\u5316\u6808\u9876\u6307\u9488\u4e3a-1\n    return resultPtr;\n}\n\n// \u5411\u6808\u4e2d\u63a8\u5165\u4e00\u4e2a\u5143\u7d20\nvoid push(CharStackPtr paraStackPtr, int paraValue) {\n    if (paraStackPtr->top >= STACK_MAX_SIZE - 1) { // \u68c0\u67e5\u6808\u7a7a\u95f4\u662f\u5426\u5df2\u6ee1\n        printf("Cannot push element: stack full.\\r\\n");\n        return;\n    }\n    paraStackPtr->top++; // \u66f4\u65b0\u6808\u9876\u6307\u9488\n    paraStackPtr->data[paraStackPtr->top] = paraValue; // \u5c06\u5143\u7d20\u63a8\u5165\u6808\u4e2d\n}\n\n// \u4ece\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\nchar pop(CharStackPtr paraStackPtr) {\n    if (paraStackPtr->top < 0) { // \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\n        printf("Cannot pop element: stack empty.\\r\\n");\n        return \'\\0\'; // \u5982\u679c\u6808\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\n    }\n    paraStackPtr->top--; // \u66f4\u65b0\u6808\u9876\u6307\u9488\n    return paraStackPtr->data[paraStackPtr->top + 1]; // \u8fd4\u56de\u5f39\u51fa\u7684\u5143\u7d20\n}\n\n// \u6d4b\u8bd5push\u548cpop\u51fd\u6570\nvoid pushPopTest() {\n    printf("---- pushPopTest begins. ----\\r\\n");\n\n    CharStackPtr tempStack = charStackInit(); // \u521d\u59cb\u5316\u6808\n    printf("After initialization, the stack is: ");\n    outputStack(tempStack);\n\n    // \u63a8\u5165\u5143\u7d20\n    for (char ch = \'a\'; ch < \'m\'; ch ++) {\n        printf("Pushing %c.\\r\\n", ch);\n        push(tempStack, ch);\n        outputStack(tempStack);\n    }\n\n    // \u5f39\u51fa\u5143\u7d20\n    char ch;\n    for (int i = 0; i < 3; i ++) {\n        ch = pop(tempStack);\n        printf("Pop %c.\\r\\n", ch);\n        outputStack(tempStack);\n    }\n\n    printf("---- pushPopTest ends. ----\\r\\n");\n}\n\n// \u7a0b\u5e8f\u5165\u53e3\u70b9\nint main() {\n    pushPopTest(); // \u8fd0\u884c\u6d4b\u8bd5\u51fd\u6570\n}\n\n'})}),"\n",(0,r.jsx)(t.p,{children:"\u4ee3\u7801\u603b\u7ed3\uff1a"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["\u5b9a\u4e49\u4e86\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6808\uff08",(0,r.jsx)(t.code,{children:"STACK_MAX_SIZE"}),"\u4e3a10\uff09\uff0c\u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"CharStack"}),"\u7ed3\u6784\u4f53\u5305\u542b\u4e00\u4e2a\u6808\u9876\u6307\u9488",(0,r.jsx)(t.code,{children:"top"}),"\u548c\u4e00\u4e2a\u6570\u636e\u6570\u7ec4",(0,r.jsx)(t.code,{children:"data"}),"\u3002\u6808\u9876\u6307\u9488\u521d\u59cb\u5316\u4e3a-1\uff0c\u8868\u793a\u6808\u4e3a\u7a7a\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"charStackInit"}),"\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u6808\uff0c\u5e76\u8fd4\u56de\u6808\u7684\u6307\u9488\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"push"}),"\u51fd\u6570\u7528\u4e8e\u5411\u6808\u4e2d\u63a8\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u5b83\u9996\u5148\u68c0\u67e5\u6808\u662f\u5426\u5df2\u6ee1\uff0c\u5982\u679c\u672a\u6ee1\uff0c\u5219\u5c06\u65b0\u5143\u7d20\u63a8\u5165\u6808\u9876\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"pop"}),"\u51fd\u6570\u7528\u4e8e\u4ece\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\u3002\u5b83\u9996\u5148\u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5f39\u51fa\u6808\u9876\u5143\u7d20\u5e76\u8fd4\u56de\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"outputStack"}),"\u51fd\u6570\u7528\u4e8e\u8f93\u51fa\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"pushPopTest"}),"\u51fd\u6570\u662f\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570\uff0c\u7528\u4e8e\u6d4b\u8bd5",(0,r.jsx)(t.code,{children:"push"}),"\u548c",(0,r.jsx)(t.code,{children:"pop"}),"\u64cd\u4f5c\u3002\u5b83\u9996\u5148\u521d\u59cb\u5316\u4e00\u4e2a\u6808\uff0c\u7136\u540e\u8fde\u7eed\u63a8\u5165\u4e00\u7cfb\u5217\u5b57\u7b26\uff0c\u4e4b\u540e\u5f39\u51fa\u51e0\u4e2a\u5b57\u7b26\uff0c\u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u8f93\u51fa\u6808\u7684\u5f53\u524d\u72b6\u6001\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"main"}),"\u51fd\u6570\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u5b83\u8c03\u7528",(0,r.jsx)(t.code,{children:"pushPopTest"}),"\u51fd\u6570\u6765\u6267\u884c\u6d4b\u8bd5\u3002"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"http://picture.nevergpdzy.cn/img_for_Typora/1648b9fbfc544190afc18a46c5104452.png",alt:""})}),"\n",(0,r.jsx)(t.h3,{id:"\u8fd0\u884c\u7ed3\u679c",children:"\u8fd0\u884c\u7ed3\u679c"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"http://picture.nevergpdzy.cn/img_for_Typora/d533ae9f35454e919ebde48e9b15e262.png",alt:""})})]})}function l(n={}){const{wrapper:t}={...(0,c.R)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>i,x:()=>s});var r=e(6540);const c={},a=r.createContext(c);function i(n){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:i(n.components),r.createElement(a.Provider,{value:t},n.children)}}}]);