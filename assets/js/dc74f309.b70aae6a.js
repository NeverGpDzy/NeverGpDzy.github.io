"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7885],{6663:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>l});var t=r(4848),u=r(8453);const d={},i="\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386",s={id:"DataStructer/\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386",title:"\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386",description:"\u4ee3\u7801",source:"@site/docs/DataStructer/\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386.md",sourceDirName:"DataStructer",slug:"/DataStructer/\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"DataStructerSidebar",previous:{title:"\u6570\u636e\u7ed3\u678411-\u4e8c\u7ef4\u6570\u7ec4\u4e0e\u77e9\u9635\u4e58\u6cd5",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678411-\u4e8c\u7ef4\u6570\u7ec4\u4e0e\u77e9\u9635\u4e58\u6cd5"},next:{title:"\u6570\u636e\u7ed3\u678413-\u54c8\u592b\u66fc\u6811",permalink:"/docs/DataStructer/\u6570\u636e\u7ed3\u678413-\u54c8\u592b\u66fc\u6811"}},o={},l=[{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2},{value:"\u4ee3\u7801\u603b\u7ed3",id:"\u4ee3\u7801\u603b\u7ed3",level:3},{value:"\u8fd0\u884c\u7ed3\u679c",id:"\u8fd0\u884c\u7ed3\u679c",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,u.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386",children:"\u6570\u636e\u7ed3\u678412-\u4e8c\u53c9\u6811\u7684\u6784\u5efa\u4e0e\u904d\u5386"}),"\n",(0,t.jsx)(n.h2,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <malloc.h>\n#include <stdbool.h>\n\n#define QUEUE_SIZE 5 // \u5b9a\u4e49\u961f\u5217\u5927\u5c0f\n\ntypedef struct BTNode{\n    char element; // \u8282\u70b9\u5b58\u50a8\u7684\u5143\u7d20\n    struct BTNode* left; // \u5de6\u5b50\u8282\u70b9\u6307\u9488\n    struct BTNode* right; // \u53f3\u5b50\u8282\u70b9\u6307\u9488\n} BTNode, *BTNodePtr;\n\ntypedef struct BTNodePtrQueue{\n    BTNodePtr* nodePtrs; // \u5b58\u50a8\u8282\u70b9\u6307\u9488\u7684\u6570\u7ec4\n    int front; // \u961f\u5217\u5934\u7d22\u5f15\n    int rear; // \u961f\u5217\u5c3e\u7d22\u5f15\n} BTNodePtrQueue, *QueuePtr;\n\n// \u521d\u59cb\u5316\u961f\u5217\nQueuePtr initQueue(){\n    QueuePtr resultQueuePtr = (QueuePtr)malloc(sizeof(struct BTNodePtrQueue));\n    resultQueuePtr->nodePtrs = (BTNodePtr*)malloc(QUEUE_SIZE * sizeof(BTNodePtr));\n    resultQueuePtr->front = 0;\n    resultQueuePtr->rear = 1;\n    return resultQueuePtr;\n}\n\n// \u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\nbool isQueueEmpty(QueuePtr paraQueuePtr){\n    if ((paraQueuePtr->front + 1) % QUEUE_SIZE == paraQueuePtr->rear) {\n        return true;\n    }\n    return false;\n}\n\n// \u5165\u961f\u64cd\u4f5c\nvoid enqueue(QueuePtr paraQueuePtr, BTNodePtr paraBTNodePtr){\n    printf("front = %d, rear = %d.\\r\\n", paraQueuePtr->front, paraQueuePtr->rear);\n    if ((paraQueuePtr->rear + 1) % QUEUE_SIZE == paraQueuePtr->front % QUEUE_SIZE) {\n        printf("Error, trying to enqueue %c. queue full.\\r\\n", paraBTNodePtr->element);\n        return;\n    }\n    paraQueuePtr->nodePtrs[paraQueuePtr->rear] = paraBTNodePtr;\n    paraQueuePtr->rear = (paraQueuePtr->rear + 1) % QUEUE_SIZE;\n    printf("enqueue %c ends.\\r\\n", paraBTNodePtr->element);\n}\n\n// \u51fa\u961f\u64cd\u4f5c\nBTNodePtr dequeue(QueuePtr paraQueuePtr){\n    if (isQueueEmpty(paraQueuePtr)) {\n        printf("Error, empty queue\\r\\n");\n        return NULL;\n    }\n    paraQueuePtr->front = (paraQueuePtr->front + 1) % QUEUE_SIZE;\n    printf("dequeue %c ends.\\r\\n", paraQueuePtr->nodePtrs[paraQueuePtr->front]->element);\n    return paraQueuePtr->nodePtrs[paraQueuePtr->front];\n}\n\n// \u6784\u9020\u4e00\u4e2a\u65b0\u8282\u70b9\nBTNodePtr constructBTNode(char paraChar){\n    BTNodePtr resultPtr = (BTNodePtr)malloc(sizeof(BTNode));\n    resultPtr->element = paraChar;\n    resultPtr->left = NULL;\n    resultPtr->right = NULL;\n    return resultPtr;\n}\n\n// \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e8c\u53c9\u6811\nBTNodePtr stringToBTree(char* paraString){\n    int i;\n    char ch;\n    QueuePtr tempQueuePtr = initQueue();\n    BTNodePtr resultHeader;\n    BTNodePtr tempParent, tempLeftChild, tempRightChild;\n    i = 0;\n    ch = paraString[i];\n    resultHeader = constructBTNode(ch);\n    enqueue(tempQueuePtr, resultHeader);\n\n    while(!isQueueEmpty(tempQueuePtr)) {\n        tempParent = dequeue(tempQueuePtr);\n        i++;\n        ch = paraString[i];\n        if (ch == \'#\') {\n            tempParent->left = NULL;\n        } else {\n            tempLeftChild = constructBTNode(ch);\n            enqueue(tempQueuePtr, tempLeftChild);\n            tempParent->left = tempLeftChild;\n        }\n        i++;\n        ch = paraString[i];\n        if (ch == \'#\') {\n            tempParent->right = NULL;\n        } else {\n            tempRightChild = constructBTNode(ch);\n            enqueue(tempQueuePtr, tempRightChild);\n            tempParent->right = tempRightChild;\n        }\n    }\n    return resultHeader;\n}\n\n// \u6309\u5c42\u6b21\u904d\u5386\u4e8c\u53c9\u6811\nvoid levelwise(BTNodePtr paraTreePtr){\n    char tempString[100];\n    int i = 0;\n    QueuePtr tempQueuePtr = initQueue();\n    BTNodePtr tempNodePtr;\n    enqueue(tempQueuePtr, paraTreePtr);\n    while(!isQueueEmpty(tempQueuePtr)) {\n        tempNodePtr = dequeue(tempQueuePtr);\n        tempString[i] = tempNodePtr->element;\n        i++;\n        if (tempNodePtr->left != NULL){\n            enqueue(tempQueuePtr, tempNodePtr->left);\n        }\n        if (tempNodePtr->right != NULL){\n            enqueue(tempQueuePtr, tempNodePtr->right);\n        }\n    }\n    tempString[i] = \'\\0\';\n    printf("Levelwise: %s\\r\\n", tempString);\n}\n\n// \u5148\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\nvoid preorder(BTNodePtr tempPtr){\n    if (tempPtr == NULL){\n        return;\n    }\n    printf("%c", tempPtr->element);\n    preorder(tempPtr->left);\n    preorder(tempPtr->right);\n}\n\n// \u4e2d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\nvoid inorder(BTNodePtr tempPtr){\n    if (tempPtr == NULL) {\n        return;\n    }\n    inorder(tempPtr->left);\n    printf("%c", tempPtr->element);\n    inorder(tempPtr->right);\n}\n\n// \u540e\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\nvoid postorder(BTNodePtr tempPtr){\n    if (tempPtr == NULL) {\n        return;\n    }\n    postorder(tempPtr->left);\n    postorder(tempPtr->right);\n    printf("%c", tempPtr->element);\n}\n\nint main(){\n    BTNodePtr tempHeader;\n    tempHeader = constructBTNode(\'c\');\n    printf("There is only one node. Preorder visit: ");\n    preorder(tempHeader);\n    printf("\\r\\n");\n\n    char* tempString = "acde#bf######";\n\n    tempHeader = stringToBTree(tempString);\n    printf("Preorder: ");\n    preorder(tempHeader);\n    printf("\\r\\n");\n    printf("Inorder: ");\n    inorder(tempHeader);\n    printf("\\r\\n");\n    printf("Postorder: ");\n    postorder(tempHeader);\n    printf("\\r\\n");\n    printf("Levelwise: ");\n    levelwise(tempHeader);\n    printf("\\r\\n");\n\n    return 1;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u4ee3\u7801\u603b\u7ed3",children:"\u4ee3\u7801\u603b\u7ed3"}),"\n",(0,t.jsx)(n.p,{children:"\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u53c9\u6811\u53ca\u5176\u904d\u5386\u64cd\u4f5c\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u529f\u80fd\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e8c\u53c9\u6811\u8282\u70b9\u548c\u961f\u5217\u7684\u5b9a\u4e49"}),"\uff1a"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BTNode"})," \u7ed3\u6784\u4f53\u7528\u4e8e\u5b9a\u4e49\u4e8c\u53c9\u6811\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u5143\u7d20\u4ee5\u53ca\u5de6\u53f3\u5b50\u8282\u70b9\u6307\u9488\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BTNodePtrQueue"})," \u7ed3\u6784\u4f53\u7528\u4e8e\u5b9a\u4e49\u5b58\u50a8\u4e8c\u53c9\u6811\u8282\u70b9\u6307\u9488\u7684\u961f\u5217\uff0c\u4ee5\u5b9e\u73b0\u5c42\u6b21\u904d\u5386\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u961f\u5217\u64cd\u4f5c"}),"\uff1a"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"initQueue"})," \u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684\u961f\u5217\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isQueueEmpty"})," \u51fd\u6570\u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"enqueue"})," \u51fd\u6570\u5c06\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u6307\u9488\u5165\u961f\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dequeue"})," \u51fd\u6570\u5c06\u4e00\u4e2a\u4e8c\u53c9\u6811\u8282\u70b9\u6307\u9488\u51fa\u961f\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u6784\u9020\u548c\u5b57\u7b26\u4e32\u8f6c\u4e8c\u53c9\u6811"}),"\uff1a"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"constructBTNode"})," \u51fd\u6570\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e8c\u53c9\u6811\u8282\u70b9\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stringToBTree"})," \u51fd\u6570\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e8c\u53c9\u6811\u3002\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e00\u4e2a\u8282\u70b9\uff0c",(0,t.jsx)(n.code,{children:"#"})," \u8868\u793a\u7a7a\u8282\u70b9\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e8c\u53c9\u6811\u7684\u904d\u5386"}),"\uff1a"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"levelwise"})," \u51fd\u6570\u5b9e\u73b0\u6309\u5c42\u6b21\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u4f7f\u7528\u961f\u5217\u6765\u8bb0\u5f55\u5f53\u524d\u5c42\u7684\u8282\u70b9\u5e76\u6309\u5c42\u6b21\u8f93\u51fa\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"preorder"})," \u51fd\u6570\u5b9e\u73b0\u5148\u5e8f\u904d\u5386\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inorder"})," \u51fd\u6570\u5b9e\u73b0\u4e2d\u5e8f\u904d\u5386\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"postorder"})," \u51fd\u6570\u5b9e\u73b0\u540e\u5e8f\u904d\u5386\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e3b\u51fd\u6570"}),"\uff1a"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"main"})," \u51fd\u6570\u4e2d\u5148\u521b\u5efa\u4e00\u4e2a\u5355\u8282\u70b9\u6811\uff0c\u5e76\u8f93\u51fa\u5176\u5148\u5e8f\u904d\u5386\u7ed3\u679c\u3002"]}),"\n",(0,t.jsx)(n.li,{children:'\u7136\u540e\u5c06\u5b57\u7b26\u4e32 "acde#bf######" \u8f6c\u6362\u4e3a\u4e8c\u53c9\u6811\uff0c\u5e76\u8f93\u51fa\u8be5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u548c\u5c42\u6b21\u904d\u5386\u7ed3\u679c\u3002'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u8fd0\u884c\u7ed3\u679c",children:"\u8fd0\u884c\u7ed3\u679c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"There is only one node. Preorder visit: c\nfront = 0, rear = 1.\nenqueue a ends.\ndequeue a ends.\nfront = 1, rear = 2.\nenqueue c ends.\nfront = 1, rear = 3.\nenqueue d ends.\ndequeue c ends.\nfront = 2, rear = 4.\nenqueue e ends.\ndequeue d ends.\nfront = 3, rear = 0.\nenqueue b ends.\nfront = 3, rear = 1.\nenqueue f ends.\ndequeue e ends.\ndequeue b ends.\ndequeue f ends.\nPreorder: acedbf\nInorder: ecabdf\nPostorder: ecbfda\nLevelwise: front = 0, rear = 1.\nenqueue a ends.\ndequeue a ends.\nfront = 1, rear = 2.\nenqueue c ends.\nfront = 1, rear = 3.\nenqueue d ends.\ndequeue c ends.\nfront = 2, rear = 4.\nenqueue e ends.\ndequeue d ends.\nfront = 3, rear = 0.\nenqueue b ends.\nfront = 3, rear = 1.\nenqueue f ends.\ndequeue e ends.\ndequeue b ends.\ndequeue f ends.\nLevelwise: acdebf\n \n \n \n...Program finished with exit code 1\nPress ENTER to exit console.\n\n"})})]})}function a(e={}){const{wrapper:n}={...(0,u.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>s});var t=r(6540);const u={},d=t.createContext(u);function i(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(u):e.components||u:i(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);